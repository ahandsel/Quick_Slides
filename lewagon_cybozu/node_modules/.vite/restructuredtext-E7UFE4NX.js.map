{
  "version": 3,
  "sources": ["../monaco-editor/esm/vs/basic-languages/restructuredtext/restructuredtext.js"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var conf = {\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '<', close: '>', notIn: ['string'] }\n    ],\n    surroundingPairs: [\n        { open: '(', close: ')' },\n        { open: '[', close: ']' },\n        { open: '`', close: '`' }\n    ],\n    folding: {\n        markers: {\n            start: new RegExp('^\\\\s*<!--\\\\s*#?region\\\\b.*-->'),\n            end: new RegExp('^\\\\s*<!--\\\\s*#?endregion\\\\b.*-->')\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.rst',\n    control: /[\\\\`*_\\[\\]{}()#+\\-\\.!]/,\n    escapes: /\\\\(?:@control)/,\n    empty: [\n        'area',\n        'base',\n        'basefont',\n        'br',\n        'col',\n        'frame',\n        'hr',\n        'img',\n        'input',\n        'isindex',\n        'link',\n        'meta',\n        'param'\n    ],\n    alphanumerics: /[A-Za-z0-9]/,\n    alphanumericsplus: /[A-Za-z0-9-_+:.]/,\n    simpleRefNameWithoutBq: /(?:@alphanumerics@alphanumericsplus*@alphanumerics)+|(?:@alphanumerics+)/,\n    simpleRefName: /(?:`@simpleRefNameWithoutBq`|@simpleRefNameWithoutBq)/,\n    phrase: /@simpleRefName(?:\\s@simpleRefName)*/,\n    citationName: /[A-Za-z][A-Za-z0-9-_.]*/,\n    blockLiteralStart: /(?:[!\"#$%&'()*+,-./:;<=>?@\\[\\]^_`{|}~]|[\\s])/,\n    precedingChars: /(?:[ -:/'\"<([{])/,\n    followingChars: /(?:[ -.,:;!?/'\")\\]}>]|$)/,\n    punctuation: /(=|-|~|`|#|\"|\\^|\\+|\\*|:|\\.|'|_|\\+)/,\n    tokenizer: {\n        root: [\n            //sections\n            [/^(@punctuation{3,}$){1,1}?/, 'keyword'],\n            //line-blocks\n            //No rules on it\n            //bullet-lists\n            [/^\\s*([\\*\\-+\u2023\u2022]|[a-zA-Z0-9]+\\.|\\([a-zA-Z0-9]+\\)|[a-zA-Z0-9]+\\))\\s/, 'keyword'],\n            //literal-blocks\n            [/([ ]::)\\s*$/, 'keyword', '@blankLineOfLiteralBlocks'],\n            [/(::)\\s*$/, 'keyword', '@blankLineOfLiteralBlocks'],\n            { include: '@tables' },\n            { include: '@explicitMarkupBlocks' },\n            { include: '@inlineMarkup' }\n        ],\n        explicitMarkupBlocks: [\n            //citations\n            { include: '@citations' },\n            //footnotes\n            { include: '@footnotes' },\n            //directives\n            [\n                /^(\\.\\.\\s)(@simpleRefName)(::\\s)(.*)$/,\n                [{ token: '', next: 'subsequentLines' }, 'keyword', '', '']\n            ],\n            //hyperlink-targets\n            [\n                /^(\\.\\.)(\\s+)(_)(@simpleRefName)(:)(\\s+)(.*)/,\n                [{ token: '', next: 'hyperlinks' }, '', '', 'string.link', '', '', 'string.link']\n            ],\n            //anonymous-hyperlinks\n            [\n                /^((?:(?:\\.\\.)(?:\\s+))?)(__)(:)(\\s+)(.*)/,\n                [{ token: '', next: 'subsequentLines' }, '', '', '', 'string.link']\n            ],\n            [/^(__\\s+)(.+)/, ['', 'string.link']],\n            //substitution-definitions\n            [\n                /^(\\.\\.)( \\|)([^| ]+[^|]*[^| ]*)(\\| )(@simpleRefName)(:: .*)/,\n                [{ token: '', next: 'subsequentLines' }, '', 'string.link', '', 'keyword', ''],\n                '@rawBlocks'\n            ],\n            [/(\\|)([^| ]+[^|]*[^| ]*)(\\|_{0,2})/, ['', 'string.link', '']],\n            //comments\n            [/^(\\.\\.)([ ].*)$/, [{ token: '', next: '@comments' }, 'comment']]\n        ],\n        inlineMarkup: [\n            { include: '@citationsReference' },\n            { include: '@footnotesReference' },\n            //hyperlink-references\n            [/(@simpleRefName)(_{1,2})/, ['string.link', '']],\n            //embedded-uris-and-aliases\n            [/(`)([^<`]+\\s+)(<)(.*)(>)(`)(_)/, ['', 'string.link', '', 'string.link', '', '', '']],\n            //emphasis\n            [/\\*\\*([^\\\\*]|\\*(?!\\*))+\\*\\*/, 'strong'],\n            [/\\*[^*]+\\*/, 'emphasis'],\n            //inline-literals\n            [/(``)((?:[^`]|\\`(?!`))+)(``)/, ['', 'keyword', '']],\n            [/(__\\s+)(.+)/, ['', 'keyword']],\n            //interpreted-text\n            [/(:)((?:@simpleRefNameWithoutBq)?)(:`)([^`]+)(`)/, ['', 'keyword', '', '', '']],\n            [/(`)([^`]+)(`:)((?:@simpleRefNameWithoutBq)?)(:)/, ['', '', '', 'keyword', '']],\n            [/(`)([^`]+)(`)/, ''],\n            //inline-internal-targets\n            [/(_`)(@phrase)(`)/, ['', 'string.link', '']]\n        ],\n        citations: [\n            [\n                /^(\\.\\.\\s+\\[)((?:@citationName))(\\]\\s+)(.*)/,\n                [{ token: '', next: '@subsequentLines' }, 'string.link', '', '']\n            ]\n        ],\n        citationsReference: [[/(\\[)(@citationName)(\\]_)/, ['', 'string.link', '']]],\n        footnotes: [\n            [\n                /^(\\.\\.\\s+\\[)((?:[0-9]+))(\\]\\s+.*)/,\n                [{ token: '', next: '@subsequentLines' }, 'string.link', '']\n            ],\n            [\n                /^(\\.\\.\\s+\\[)((?:#@simpleRefName?))(\\]\\s+)(.*)/,\n                [{ token: '', next: '@subsequentLines' }, 'string.link', '', '']\n            ],\n            [\n                /^(\\.\\.\\s+\\[)((?:\\*))(\\]\\s+)(.*)/,\n                [{ token: '', next: '@subsequentLines' }, 'string.link', '', '']\n            ]\n        ],\n        footnotesReference: [\n            [/(\\[)([0-9]+)(\\])(_)/, ['', 'string.link', '', '']],\n            [/(\\[)(#@simpleRefName?)(\\])(_)/, ['', 'string.link', '', '']],\n            [/(\\[)(\\*)(\\])(_)/, ['', 'string.link', '', '']]\n        ],\n        blankLineOfLiteralBlocks: [\n            [/^$/, '', '@subsequentLinesOfLiteralBlocks'],\n            [/^.*$/, '', '@pop']\n        ],\n        subsequentLinesOfLiteralBlocks: [\n            [/(@blockLiteralStart+)(.*)/, ['keyword', '']],\n            [/^(?!blockLiteralStart)/, '', '@popall']\n        ],\n        subsequentLines: [\n            [/^[\\s]+.*/, ''],\n            [/^(?!\\s)/, '', '@pop']\n        ],\n        hyperlinks: [\n            [/^[\\s]+.*/, 'string.link'],\n            [/^(?!\\s)/, '', '@pop']\n        ],\n        comments: [\n            [/^[\\s]+.*/, 'comment'],\n            [/^(?!\\s)/, '', '@pop']\n        ],\n        tables: [\n            [/\\+-[+-]+/, 'keyword'],\n            [/\\+=[+=]+/, 'keyword']\n        ]\n    }\n};\n"],
  "mappings": "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",
  "names": []
}
