{
  "version": 3,
  "sources": ["../monaco-editor/esm/vs/basic-languages/css/css.js"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var conf = {\n    wordPattern: /(#?-?\\d*\\.\\d\\w*%?)|((::|[@#.!:])?[\\w-?]+%?)|::|[@#.!:]/g,\n    comments: {\n        blockComment: ['/*', '*/']\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}', notIn: ['string', 'comment'] },\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\n        { open: \"'\", close: \"'\", notIn: ['string', 'comment'] }\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" }\n    ],\n    folding: {\n        markers: {\n            start: new RegExp('^\\\\s*\\\\/\\\\*\\\\s*#region\\\\b\\\\s*(.*?)\\\\s*\\\\*\\\\/'),\n            end: new RegExp('^\\\\s*\\\\/\\\\*\\\\s*#endregion\\\\b.*\\\\*\\\\/')\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.css',\n    ws: '[ \\t\\n\\r\\f]*',\n    identifier: '-?-?([a-zA-Z]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*',\n    brackets: [\n        { open: '{', close: '}', token: 'delimiter.bracket' },\n        { open: '[', close: ']', token: 'delimiter.bracket' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '<', close: '>', token: 'delimiter.angle' }\n    ],\n    tokenizer: {\n        root: [{ include: '@selector' }],\n        selector: [\n            { include: '@comments' },\n            { include: '@import' },\n            { include: '@strings' },\n            [\n                '[@](keyframes|-webkit-keyframes|-moz-keyframes|-o-keyframes)',\n                { token: 'keyword', next: '@keyframedeclaration' }\n            ],\n            ['[@](page|content|font-face|-moz-document)', { token: 'keyword' }],\n            ['[@](charset|namespace)', { token: 'keyword', next: '@declarationbody' }],\n            [\n                '(url-prefix)(\\\\()',\n                ['attribute.value', { token: 'delimiter.parenthesis', next: '@urldeclaration' }]\n            ],\n            [\n                '(url)(\\\\()',\n                ['attribute.value', { token: 'delimiter.parenthesis', next: '@urldeclaration' }]\n            ],\n            { include: '@selectorname' },\n            ['[\\\\*]', 'tag'],\n            ['[>\\\\+,]', 'delimiter'],\n            ['\\\\[', { token: 'delimiter.bracket', next: '@selectorattribute' }],\n            ['{', { token: 'delimiter.bracket', next: '@selectorbody' }]\n        ],\n        selectorbody: [\n            { include: '@comments' },\n            ['[*_]?@identifier@ws:(?=(\\\\s|\\\\d|[^{;}]*[;}]))', 'attribute.name', '@rulevalue'],\n            ['}', { token: 'delimiter.bracket', next: '@pop' }]\n        ],\n        selectorname: [\n            ['(\\\\.|#(?=[^{])|%|(@identifier)|:)+', 'tag'] // selector (.foo, div, ...)\n        ],\n        selectorattribute: [\n            { include: '@term' },\n            [']', { token: 'delimiter.bracket', next: '@pop' }]\n        ],\n        term: [\n            { include: '@comments' },\n            [\n                '(url-prefix)(\\\\()',\n                ['attribute.value', { token: 'delimiter.parenthesis', next: '@urldeclaration' }]\n            ],\n            [\n                '(url)(\\\\()',\n                ['attribute.value', { token: 'delimiter.parenthesis', next: '@urldeclaration' }]\n            ],\n            { include: '@functioninvocation' },\n            { include: '@numbers' },\n            { include: '@name' },\n            { include: '@strings' },\n            ['([<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~,])', 'delimiter'],\n            [',', 'delimiter']\n        ],\n        rulevalue: [\n            { include: '@comments' },\n            { include: '@strings' },\n            { include: '@term' },\n            ['!important', 'keyword'],\n            [';', 'delimiter', '@pop'],\n            ['(?=})', { token: '', next: '@pop' }] // missing semicolon\n        ],\n        warndebug: [['[@](warn|debug)', { token: 'keyword', next: '@declarationbody' }]],\n        import: [['[@](import)', { token: 'keyword', next: '@declarationbody' }]],\n        urldeclaration: [\n            { include: '@strings' },\n            ['[^)\\r\\n]+', 'string'],\n            ['\\\\)', { token: 'delimiter.parenthesis', next: '@pop' }]\n        ],\n        parenthizedterm: [\n            { include: '@term' },\n            ['\\\\)', { token: 'delimiter.parenthesis', next: '@pop' }]\n        ],\n        declarationbody: [\n            { include: '@term' },\n            [';', 'delimiter', '@pop'],\n            ['(?=})', { token: '', next: '@pop' }] // missing semicolon\n        ],\n        comments: [\n            ['\\\\/\\\\*', 'comment', '@comment'],\n            ['\\\\/\\\\/+.*', 'comment']\n        ],\n        comment: [\n            ['\\\\*\\\\/', 'comment', '@pop'],\n            [/[^*/]+/, 'comment'],\n            [/./, 'comment']\n        ],\n        name: [['@identifier', 'attribute.value']],\n        numbers: [\n            [\n                '-?(\\\\d*\\\\.)?\\\\d+([eE][\\\\-+]?\\\\d+)?',\n                { token: 'attribute.value.number', next: '@units' }\n            ],\n            ['#[0-9a-fA-F_]+(?!\\\\w)', 'attribute.value.hex']\n        ],\n        units: [\n            [\n                '(em|ex|ch|rem|vmin|vmax|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)?',\n                'attribute.value.unit',\n                '@pop'\n            ]\n        ],\n        keyframedeclaration: [\n            ['@identifier', 'attribute.value'],\n            ['{', { token: 'delimiter.bracket', switchTo: '@keyframebody' }]\n        ],\n        keyframebody: [\n            { include: '@term' },\n            ['{', { token: 'delimiter.bracket', next: '@selectorbody' }],\n            ['}', { token: 'delimiter.bracket', next: '@pop' }]\n        ],\n        functioninvocation: [\n            ['@identifier\\\\(', { token: 'attribute.value', next: '@functionarguments' }]\n        ],\n        functionarguments: [\n            ['\\\\$@identifier@ws:', 'attribute.name'],\n            ['[,]', 'delimiter'],\n            { include: '@term' },\n            ['\\\\)', { token: 'attribute.value', next: '@pop' }]\n        ],\n        strings: [\n            ['~?\"', { token: 'string', next: '@stringenddoublequote' }],\n            [\"~?'\", { token: 'string', next: '@stringendquote' }]\n        ],\n        stringenddoublequote: [\n            ['\\\\\\\\.', 'string'],\n            ['\"', { token: 'string', next: '@pop' }],\n            [/[^\\\\\"]+/, 'string'],\n            ['.', 'string']\n        ],\n        stringendquote: [\n            ['\\\\\\\\.', 'string'],\n            [\"'\", { token: 'string', next: '@pop' }],\n            [/[^\\\\']+/, 'string'],\n            ['.', 'string']\n        ]\n    }\n};\n"],
  "mappings": "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",
  "names": []
}
